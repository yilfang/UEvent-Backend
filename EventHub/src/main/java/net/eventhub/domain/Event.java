package net.eventhub.domain;
// Generated Jun 11, 2021, 12:30:35 AM by Hibernate Tools 5.4.30.Final

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.stream.Stream;

import javax.json.bind.annotation.JsonbDateFormat;
import javax.json.bind.annotation.JsonbTransient;
import javax.persistence.*;
import javax.xml.bind.annotation.XmlTransient;

import org.springframework.core.type.filter.AbstractClassTestingTypeFilter;

import com.fasterxml.jackson.annotation.JsonIgnore;






/**
 * Event generated by hbm2java
 */
@Entity
@Table(name="event")
public class Event implements java.io.Serializable {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "event_id")
	private int eventId;
	
	@ManyToOne(cascade = CascadeType.PERSIST)
	@JoinColumn(name="host_id")
	private User host;
	
	@Column(name = "name")
	private String name;
	
	@Column(name = "location")
	private String location;
	
	@Column(name="location_details")
	private String locationDetails;
	
	@Column(name="private_event")
	private Boolean privateEvent;
	
	@Column(name = "virtual_event")
	private Boolean virtualEvent;
	
	@Column(name = "registration_link")
	private String registrationLink;
	
	@Column(name="longitude", precision = 11, scale = 8)
	private BigDecimal longitude;
	
	@Column(name="latitude", precision = 11, scale = 8)
	private BigDecimal latitude;
	
	@Column(name = "description", length=1000)
	private String description;
	
	@Column(name = "event_image")
	private String eventImage;
	
	@Column(name = "organizer", length = 100)
	private String organizer;
	
	@Column(name = "organizer_website", length = 100)
	private String organizerWebsite;
	
	@Column(name = "organizer_avatar")
	private String organizerAvatar;
	
	@Column(name = "organizer_email", length=50)
	private String organizerEmail;
	
	@Column(name= "disabled", columnDefinition = "boolean default false" )
	private Boolean disabled;
	
	@Column(name= "hostNotis", columnDefinition = "boolean default true" )
	private Boolean hostNotis;
	
	@Column(name = "start_time")
	private Date startTime;
	
	@Column(name = "end_time")
	private Date endTime;
	
	@OneToMany(mappedBy = "event", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true )
	private Set<EventCategory>categories;
	
	@OneToMany(mappedBy = "event", fetch = FetchType.EAGER)
	private Set<EventUpdate>updates;

	@OneToMany(mappedBy = "event", fetch = FetchType.EAGER )
	private Set<EventFollower>followers;
	
	@OneToMany(mappedBy = "event", fetch = FetchType.EAGER)
	private Set<EventInvitee>invitees;
	
	@OneToMany(mappedBy = "event", fetch = FetchType.EAGER)
	private Set<EventAttendee>attendee;

	public Event() {
	}

	
	public int getEventId() {
		return this.eventId;
	}

	public void setEventId(int eventId) {
		this.eventId = eventId;
	}

	
	public Set<EventCategory> getCategories() {
		if ( categories == null )
		{
			categories = new HashSet();
		}
		return categories;
	}


	public void setCategories(Set<EventCategory> categories) {
		this.categories = categories;
	}
	
	public void addCategory(EventCategory category)
	{
		category.setEvent(this);
		getCategories().add(category);
	}


	public User getHost() {
		return this.host;
	}

	public void setUser(User user) {
		this.host = user;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}
	
	

	public BigDecimal getLongitude() {
		return longitude;
	}


	public void setLongitude(BigDecimal longtiude) {
		this.longitude = longtiude;
	}


	public BigDecimal getLatitude() {
		return this.latitude;
	}

	public void setLatitude(BigDecimal latitude) {
		this.latitude = latitude;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	

	public String getOrganizer() {
		return organizer;
	}


	public void setOrganizer(String organizer) {
		this.organizer = organizer;
	}


	public String getOrganizerWebsite() {
		return organizerWebsite;
	}


	public void setOrganizerWebsite(String orgWebSite) {
		this.organizerWebsite = orgWebSite;
	}


	public Date getStartTime() {
		return startTime;
	}


	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}


	public Date getEndTime() {
		return endTime;
	}


	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}


	public String getLocationDetails() {
		return locationDetails;
	}


	public void setLocationDetails(String locationDetails) {
		this.locationDetails = locationDetails;
	}


	public Boolean getPrivateEvent() {
		return privateEvent;
	}


	public void setPrivateEvent(Boolean privateEvent) {
		this.privateEvent = privateEvent;
	}


	public Boolean getVirtualEvent() {
		return virtualEvent;
	}


	public void setVirtualEvent(Boolean virtualEvent) {
		this.virtualEvent = virtualEvent;
	}


	public String getRegistrationLink() {
		return registrationLink;
	}


	public void setRegistrationLink(String regLink) {
		this.registrationLink = regLink;
	}


	public void setHost(User host) {
		this.host = host;
	}


	/*
	 * public Set<User> getAttendees() { return attendees; }
	 * 
	 * 
	 * public void setAttendees(Set<User> attendees) { this.attendees = attendees; }
	 * 
	 * 
	 * public Set<User> getInvitees() { return invitees; }
	 * 
	 * 
	 * public void setInvitees(Set<User> invitees) { this.invitees = invitees; }
	 */

	public Set<EventUpdate> getUpdates() {
		return updates;
	}


	public void setUpdates(Set<EventUpdate> updates) {
		this.updates = updates;
	}

	public String getOrganizerEmail() {
		return organizerEmail;
	}


	public void setOrganizerEmail(String organizerEmail) {
		this.organizerEmail = organizerEmail;
	}


	public String getEventImage() {
		return eventImage;
	}


	public void setEventImage(String eventImage) {
		this.eventImage = eventImage;
	}


	public String getOrganizerAvatar() {
		return organizerAvatar;
	}


	public void setOrganizerAvatar(String orgAvatar) {
		this.organizerAvatar = orgAvatar;
	}

	
	public Boolean getDisabled() {
		return disabled;
	}


	public void setDisabled(Boolean disabled) {
		this.disabled = disabled;
	}

	
	public Boolean getHostNotis() {
		return hostNotis;
	}


	public void setHostNotis(Boolean hostNotis) {
		this.hostNotis = hostNotis;
	}


	public Set<EventFollower> getFollowers() {
		if ( this.followers == null)
		{
			this.followers = new HashSet<>();
		}
		return followers;
	}


	public void setFollowers(Set<EventFollower> followers) {
		this.followers = followers;
	}


	public Set<EventInvitee> getInvitees() {
		if ( this.invitees == null )
		{
			this.invitees = new HashSet<>();
		}
		return invitees;
	}


	public void setInvitees(Set<EventInvitee> invitees) {
		this.invitees = invitees;
	}


	public Set<EventAttendee> getAttendee() {
		if ( this.attendee == null )
		{
			this.attendee = new HashSet();
		}
		return attendee;
	}
	
	
	public Boolean isFollower(Integer userId)
	{
		for(EventFollower f : getFollowers())
		{
			if ( userId.equals(f.getFollower().getId()))
			{
				return true;
			}
		}
		
		return false;
	}
	
	public Boolean isInvitee(Integer userId)
	{
		for(EventInvitee i : getInvitees())
		{
			if ( userId.equals(i.getInvitee().getId()))
			{
				return true;
			}
		}
		
		return false;
	}
	
	public Boolean isAttendee(Integer userId)
	{
		for(EventAttendee a : getAttendee())
		{
			if ( userId.equals(a.getAttendee().getId()))
			{
				return true;
			}
		}
		
		return false;
	}


	public void setAttendee(Set<EventAttendee> attendee) {
		this.attendee = attendee;
	}
	
	
	 
}
